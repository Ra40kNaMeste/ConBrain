{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import type {\n  PluginAPI,\n  PluginObject,\n  PluginPass,\n  PresetAPI,\n  PresetObject,\n} from \"@babel/core\";\n\ntype APIPolyfillFactory<T extends keyof PluginAPI> = (\n  api: PluginAPI,\n) => PluginAPI[T];\n\ntype APIPolyfills = {\n  assertVersion: APIPolyfillFactory<\"assertVersion\">;\n};\n\nconst apiPolyfills: APIPolyfills = {\n  // Not supported by Babel 7 and early versions of Babel 7 beta.\n  // It's important that this is polyfilled for older Babel versions\n  // since it's needed to report the version mismatch.\n  assertVersion: (api: PluginAPI) => (range: number | string) => {\n    throwVersionError(range, api.version);\n  },\n};\nif (!process.env.BABEL_8_BREAKING) {\n  Object.assign(apiPolyfills, {\n    // This is supported starting from Babel 7.13\n    targets: () => () => {\n      return {};\n    },\n    // This is supported starting from Babel 7.13\n    assumption: () => () => {\n      return undefined;\n    },\n  });\n}\n\nexport function declare<State = {}, Option = {}>(\n  builder: (\n    api: PluginAPI,\n    options: Option,\n    dirname: string,\n  ) => PluginObject<State & PluginPass>,\n): (\n  api: PluginAPI,\n  options: Option,\n  dirname: string,\n) => PluginObject<State & PluginPass> {\n  return (api, options: Option, dirname: string) => {\n    let clonedApi: PluginAPI;\n\n    for (const name of Object.keys(\n      apiPolyfills,\n    ) as (keyof typeof apiPolyfills)[]) {\n      if (api[name]) continue;\n\n      clonedApi ??= copyApiObject(api);\n      clonedApi[name] = apiPolyfills[name](clonedApi);\n    }\n\n    // @ts-expect-error options || {} may not be assigned to Options\n    return builder(clonedApi ?? api, options || {}, dirname);\n  };\n}\n\nexport const declarePreset = declare as <Option = {}>(\n  builder: (api: PresetAPI, options: Option, dirname: string) => PresetObject,\n) => (api: PresetAPI, options: Option, dirname: string) => PresetObject;\n\nfunction copyApiObject(api: PluginAPI): PluginAPI {\n  // Babel >= 7 <= beta.41 passed the API as a new object that had\n  // babel/core as the prototype. While slightly faster, it also\n  // means that the Object.assign copy below fails. Rather than\n  // keep complexity, the Babel 6 behavior has been reverted and this\n  // normalizes all that for Babel 7.\n  let proto = null;\n  if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n    proto = Object.getPrototypeOf(api);\n    if (\n      proto &&\n      (!Object.hasOwn(proto, \"version\") ||\n        !Object.hasOwn(proto, \"transform\") ||\n        !Object.hasOwn(proto, \"template\") ||\n        !Object.hasOwn(proto, \"types\"))\n    ) {\n      proto = null;\n    }\n  }\n\n  return {\n    ...proto,\n    ...api,\n  };\n}\n\nfunction throwVersionError(range: string | number, version: string) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n    range = `^${range}.0.0-0`;\n  }\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    // Bump up the limit if needed so that users are more likely\n    // to be able to see what is calling Babel.\n    Error.stackTraceLimit = 25;\n  }\n\n  let err;\n  if (version.slice(0, 2) === \"7.\") {\n    err = new Error(\n      `Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` +\n        `You'll need to update your @babel/core version.`,\n    );\n  } else {\n    err = new Error(\n      `Requires Babel \"${range}\", but was loaded with \"${version}\". ` +\n        `If you are sure you have a compatible version of @babel/core, ` +\n        `it is likely that something in your build process is loading the ` +\n        `wrong version. Inspect the stack trace of this error to look for ` +\n        `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` +\n        `to see what is calling Babel.`,\n    );\n  }\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version,\n    range,\n  } as any);\n}\n"],"names":["apiPolyfills","assertVersion","api","range","throwVersionError","version","declare","builder","options","dirname","clonedApi","name","Object","keys","copyApiObject","declarePreset","proto","test","getPrototypeOf","hasOwn","assign","Number","isInteger","Error","limit","stackTraceLimit","err","slice","code"],"mappings":"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"}