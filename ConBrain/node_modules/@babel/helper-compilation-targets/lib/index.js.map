{"version":3,"file":"index.js","sources":["../src/targets.ts","../src/utils.ts","../src/options.ts","../src/pretty.ts","../src/debug.ts","../src/filter-items.ts","../src/index.ts"],"sourcesContent":["export const unreleasedLabels = {\n  safari: \"tp\",\n} as const;\n\n// Map from browserslist|@mdn/browser-compat-data browser names to @kangax/compat-table browser names\nexport const browserNameMap = {\n  and_chr: \"chrome\",\n  and_ff: \"firefox\",\n  android: \"android\",\n  chrome: \"chrome\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  ie: \"ie\",\n  ie_mob: \"ie\",\n  ios_saf: \"ios\",\n  node: \"node\",\n  deno: \"deno\",\n  op_mob: \"opera_mobile\",\n  opera: \"opera\",\n  safari: \"safari\",\n  samsung: \"samsung\",\n} as const;\n\nexport type BrowserslistBrowserName = keyof typeof browserNameMap;\n","import semver from \"semver\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\nimport { unreleasedLabels } from \"./targets.ts\";\nimport type { Target, Targets } from \"./types.ts\";\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nexport function semverMin(\n  first: string | undefined | null,\n  second: string,\n): string {\n  return first && semver.lt(first, second) ? first : second;\n}\n\n// Convert version to a semver value.\n// 2.5 -> 2.5.0; 1 -> 1.0.0;\nexport function semverify(version: number | string): string {\n  if (typeof version === \"string\" && semver.valid(version)) {\n    return version;\n  }\n\n  v.invariant(\n    typeof version === \"number\" ||\n      (typeof version === \"string\" && versionRegExp.test(version)),\n    `'${version}' is not a valid version`,\n  );\n\n  version = version.toString();\n\n  let pos = 0;\n  let num = 0;\n  while ((pos = version.indexOf(\".\", pos + 1)) > 0) {\n    num++;\n  }\n  return version + \".0\".repeat(2 - num);\n}\n\nexport function isUnreleasedVersion(\n  version: string | number,\n  env: Target,\n): boolean {\n  const unreleasedLabel =\n    // @ts-expect-error unreleasedLabel will be guarded later\n    unreleasedLabels[env];\n  return (\n    !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase()\n  );\n}\n\nexport function getLowestUnreleased(a: string, b: string, env: Target): string {\n  const unreleasedLabel:\n    | (typeof unreleasedLabels)[keyof typeof unreleasedLabels]\n    | undefined =\n    // @ts-expect-error unreleasedLabel is undefined when env is not safari\n    unreleasedLabels[env];\n  if (a === unreleasedLabel) {\n    return b;\n  }\n  if (b === unreleasedLabel) {\n    return a;\n  }\n  return semverMin(a, b);\n}\n\nexport function getHighestUnreleased(\n  a: string,\n  b: string,\n  env: Target,\n): string {\n  return getLowestUnreleased(a, b, env) === a ? b : a;\n}\n\nexport function getLowestImplementedVersion(\n  plugin: Targets,\n  environment: Target,\n): string {\n  const result = plugin[environment];\n  // When Android support data is absent, use Chrome data as fallback\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n  return result;\n}\n","export const TargetNames = {\n  node: \"node\",\n  deno: \"deno\",\n  chrome: \"chrome\",\n  opera: \"opera\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  safari: \"safari\",\n  ie: \"ie\",\n  ios: \"ios\",\n  android: \"android\",\n  electron: \"electron\",\n  samsung: \"samsung\",\n  rhino: \"rhino\",\n  opera_mobile: \"opera_mobile\",\n};\n","import semver from \"semver\";\nimport { unreleasedLabels } from \"./targets.ts\";\nimport type { Targets, Target } from \"./types.ts\";\n\nexport function prettifyVersion(version: string) {\n  if (typeof version !== \"string\") {\n    return version;\n  }\n\n  const { major, minor, patch } = semver.parse(version);\n\n  const parts = [major];\n\n  if (minor || patch) {\n    parts.push(minor);\n  }\n\n  if (patch) {\n    parts.push(patch);\n  }\n\n  return parts.join(\".\");\n}\n\nexport function prettifyTargets(targets: Targets): Targets {\n  return Object.keys(targets).reduce((results, target: Target) => {\n    let value = targets[target];\n\n    const unreleasedLabel =\n      // @ts-expect-error undefined is strictly compared with string later\n      unreleasedLabels[target];\n    if (typeof value === \"string\" && unreleasedLabel !== value) {\n      value = prettifyVersion(value);\n    }\n\n    results[target] = value;\n    return results;\n  }, {} as Targets);\n}\n","import semver from \"semver\";\nimport { prettifyVersion } from \"./pretty.ts\";\nimport {\n  semverify,\n  isUnreleasedVersion,\n  getLowestImplementedVersion,\n} from \"./utils.ts\";\nimport type { Target, Targets } from \"./types.ts\";\n\nexport function getInclusionReasons(\n  item: string,\n  targetVersions: Targets,\n  list: { [key: string]: Targets },\n) {\n  const minVersions = list[item] || {};\n\n  return (Object.keys(targetVersions) as Target[]).reduce(\n    (result, env) => {\n      const minVersion = getLowestImplementedVersion(minVersions, env);\n      const targetVersion = targetVersions[env];\n\n      if (!minVersion) {\n        result[env] = prettifyVersion(targetVersion);\n      } else {\n        const minIsUnreleased = isUnreleasedVersion(minVersion, env);\n        const targetIsUnreleased = isUnreleasedVersion(targetVersion, env);\n\n        if (\n          !targetIsUnreleased &&\n          (minIsUnreleased ||\n            semver.lt(targetVersion.toString(), semverify(minVersion)))\n        ) {\n          result[env] = prettifyVersion(targetVersion);\n        }\n      }\n\n      return result;\n    },\n    {} as Partial<Record<Target, string>>,\n  );\n}\n","import semver from \"semver\";\n\nimport pluginsCompatData from \"@babel/compat-data/plugins\";\n\nimport type { Targets } from \"./types.ts\";\nimport {\n  getLowestImplementedVersion,\n  isUnreleasedVersion,\n  semverify,\n} from \"./utils.ts\";\n\nexport function targetsSupported(target: Targets, support: Targets) {\n  const targetEnvironments = Object.keys(target) as Array<keyof Targets>;\n\n  if (targetEnvironments.length === 0) {\n    return false;\n  }\n\n  const unsupportedEnvironments = targetEnvironments.filter(environment => {\n    const lowestImplementedVersion = getLowestImplementedVersion(\n      support,\n      environment,\n    );\n\n    // Feature is not implemented in that environment\n    if (!lowestImplementedVersion) {\n      return true;\n    }\n\n    const lowestTargetedVersion = target[environment];\n\n    // If targets has unreleased value as a lowest version, then don't require a plugin.\n    if (isUnreleasedVersion(lowestTargetedVersion, environment)) {\n      return false;\n    }\n\n    // Include plugin if it is supported in the unreleased environment, which wasn't specified in targets\n    if (isUnreleasedVersion(lowestImplementedVersion, environment)) {\n      return true;\n    }\n\n    if (!semver.valid(lowestTargetedVersion.toString())) {\n      throw new Error(\n        `Invalid version passed for target \"${environment}\": \"${lowestTargetedVersion}\". ` +\n          \"Versions must be in semver format (major.minor.patch)\",\n      );\n    }\n\n    return semver.gt(\n      semverify(lowestImplementedVersion),\n      lowestTargetedVersion.toString(),\n    );\n  });\n\n  return unsupportedEnvironments.length === 0;\n}\n\nexport function isRequired(\n  name: string,\n  targets: Targets,\n  {\n    compatData = pluginsCompatData,\n    includes,\n    excludes,\n  }: {\n    compatData?: { [feature: string]: Targets };\n    includes?: Set<string>;\n    excludes?: Set<string>;\n  } = {},\n) {\n  if (excludes?.has(name)) return false;\n  if (includes?.has(name)) return true;\n  return !targetsSupported(targets, compatData[name]);\n}\n\nexport default function filterItems(\n  list: { [feature: string]: Targets },\n  includes: Set<string>,\n  excludes: Set<string>,\n  targets: Targets,\n  defaultIncludes: Array<string> | null,\n  defaultExcludes?: Array<string> | null,\n  pluginSyntaxMap?: Map<string, string | null>,\n) {\n  const result = new Set<string>();\n  const options = { compatData: list, includes, excludes };\n\n  for (const item in list) {\n    if (isRequired(item, targets, options)) {\n      result.add(item);\n    } else if (pluginSyntaxMap) {\n      const shippedProposalsSyntax = pluginSyntaxMap.get(item);\n\n      if (shippedProposalsSyntax) {\n        result.add(shippedProposalsSyntax);\n      }\n    }\n  }\n\n  defaultIncludes?.forEach(item => !excludes.has(item) && result.add(item));\n  defaultExcludes?.forEach(item => !includes.has(item) && result.delete(item));\n\n  return result;\n}\n","import browserslist from \"browserslist\";\nimport { findSuggestion } from \"@babel/helper-validator-option\";\nimport browserModulesData from \"@babel/compat-data/native-modules\";\nimport LruCache from \"lru-cache\";\n\nimport {\n  semverify,\n  semverMin,\n  isUnreleasedVersion,\n  getLowestUnreleased,\n  getHighestUnreleased,\n} from \"./utils.ts\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\nimport { browserNameMap } from \"./targets.ts\";\nimport { TargetNames } from \"./options.ts\";\nimport type {\n  Target,\n  Targets,\n  InputTargets,\n  Browsers,\n  BrowserslistBrowserName,\n  TargetsTuple,\n} from \"./types.ts\";\n\nexport type { Target, Targets, InputTargets };\n\nexport { prettifyTargets } from \"./pretty.ts\";\nexport { getInclusionReasons } from \"./debug.ts\";\nexport { default as filterItems, isRequired } from \"./filter-items.ts\";\nexport { unreleasedLabels } from \"./targets.ts\";\nexport { TargetNames };\n\nconst ESM_SUPPORT = browserModulesData[\"es6.module\"];\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nfunction validateTargetNames(targets: Targets): TargetsTuple {\n  const validTargets = Object.keys(TargetNames);\n  for (const target of Object.keys(targets)) {\n    if (!(target in TargetNames)) {\n      throw new Error(\n        v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${findSuggestion(target, validTargets)}'?`),\n      );\n    }\n  }\n\n  return targets;\n}\n\nexport function isBrowsersQueryValid(browsers: unknown): boolean {\n  return (\n    typeof browsers === \"string\" ||\n    (Array.isArray(browsers) && browsers.every(b => typeof b === \"string\"))\n  );\n}\n\nfunction validateBrowsers(browsers: Browsers | undefined) {\n  v.invariant(\n    browsers === undefined || isBrowsersQueryValid(browsers),\n    `'${String(browsers)}' is not a valid browserslist query`,\n  );\n\n  return browsers;\n}\n\nfunction getLowestVersions(browsers: Array<string>): Targets {\n  return browsers.reduce(\n    (all, browser) => {\n      const [browserName, browserVersion] = browser.split(\" \") as [\n        BrowserslistBrowserName,\n        string,\n      ];\n      const target = browserNameMap[browserName];\n\n      if (!target) {\n        return all;\n      }\n\n      try {\n        // Browser version can return as \"10.0-10.2\"\n        const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n        const isSplitUnreleased = isUnreleasedVersion(splitVersion, target);\n\n        if (!all[target]) {\n          all[target] = isSplitUnreleased\n            ? splitVersion\n            : semverify(splitVersion);\n          return all;\n        }\n\n        const version = all[target];\n        const isUnreleased = isUnreleasedVersion(version, target);\n\n        if (isUnreleased && isSplitUnreleased) {\n          all[target] = getLowestUnreleased(version, splitVersion, target);\n        } else if (isUnreleased) {\n          all[target] = semverify(splitVersion);\n        } else if (!isUnreleased && !isSplitUnreleased) {\n          const parsedBrowserVersion = semverify(splitVersion);\n\n          all[target] = semverMin(version, parsedBrowserVersion);\n        }\n      } catch (e) {}\n\n      return all;\n    },\n    {} as Record<Target, string>,\n  );\n}\n\nfunction outputDecimalWarning(\n  decimalTargets: Array<{ target: string; value: number }>,\n) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({ target, value }) =>\n    console.warn(`  ${target}: ${value}`),\n  );\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target: Target, value: string) {\n  try {\n    return semverify(value);\n  } catch (error) {\n    throw new Error(\n      v.formatMessage(\n        `'${value}' is not a valid value for 'targets.${target}'.`,\n      ),\n    );\n  }\n}\n\n// Parse `node: true` and `node: \"current\"` to version\nfunction nodeTargetParser(value: true | string) {\n  const parsed =\n    value === true || value === \"current\"\n      ? process.versions.node\n      : semverifyTarget(\"node\", value);\n  return [\"node\", parsed] as const;\n}\n\nfunction defaultTargetParser(\n  target: Exclude<Target, \"node\">,\n  value: string,\n): readonly [Exclude<Target, \"node\">, string] {\n  const version = isUnreleasedVersion(value, target)\n    ? value.toLowerCase()\n    : semverifyTarget(target, value);\n  return [target, version] as const;\n}\n\nfunction generateTargets(inputTargets: InputTargets): Targets {\n  const input = { ...inputTargets };\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries: Browsers, env?: string): Targets {\n  const resolved = browserslist(queries, {\n    mobileToDesktop: true,\n    env,\n  });\n  return getLowestVersions(resolved);\n}\n\nconst targetsCache = new LruCache({ max: 64 });\n\nfunction resolveTargetsCached(queries: Browsers, env?: string): Targets {\n  const cacheKey = typeof queries === \"string\" ? queries : queries.join() + env;\n  let cached = targetsCache.get(cacheKey) as Targets | undefined;\n  if (!cached) {\n    cached = resolveTargets(queries, env);\n    targetsCache.set(cacheKey, cached);\n  }\n  return { ...cached };\n}\n\ntype GetTargetsOption = {\n  // This is not the path of the config file, but the path where start searching it from\n  configPath?: string;\n  // The path of the config file\n  configFile?: string;\n  // The env to pass to browserslist\n  browserslistEnv?: string;\n  // true to disable config loading\n  ignoreBrowserslistConfig?: boolean;\n};\n\nexport default function getTargets(\n  inputTargets: InputTargets = {},\n  options: GetTargetsOption = {},\n): Targets {\n  let { browsers, esmodules } = inputTargets;\n  const { configPath = \".\" } = options;\n\n  validateBrowsers(browsers);\n\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig =\n    !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv,\n    });\n    if (browsers == null) {\n      if (process.env.BABEL_8_BREAKING) {\n        // In Babel 8, if no targets are passed, we use browserslist's defaults.\n        browsers = [\"defaults\"];\n      } else {\n        // If no targets are passed, we need to overwrite browserslist's defaults\n        // so that we enable all transforms (acting like the now deprecated\n        // preset-latest).\n        browsers = [];\n      }\n    }\n  }\n\n  // `esmodules` as a target indicates the specific set of browsers supporting ES Modules.\n  // These values OVERRIDE the `browsers` field.\n  if (esmodules && (esmodules !== \"intersect\" || !browsers?.length)) {\n    browsers = Object.keys(ESM_SUPPORT)\n      .map(\n        (browser: keyof typeof ESM_SUPPORT) =>\n          `${browser} >= ${ESM_SUPPORT[browser]}`,\n      )\n      .join(\", \");\n    esmodules = false;\n  }\n\n  // If current value of `browsers` is undefined (`ignoreBrowserslistConfig` should be `false`)\n  // or an empty array (without any user config, use default config),\n  // we don't need to call `resolveTargets` to execute the related methods of `browserslist` library.\n  if (browsers?.length) {\n    const queryBrowsers = resolveTargetsCached(\n      browsers,\n      options.browserslistEnv,\n    );\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers) as Target[]) {\n        if (browser !== \"deno\" && browser !== \"ie\") {\n          const esmSupportVersion =\n            ESM_SUPPORT[browser === \"opera_mobile\" ? \"op_mob\" : browser];\n\n          if (esmSupportVersion) {\n            const version = queryBrowsers[browser];\n            queryBrowsers[browser] = getHighestUnreleased(\n              version,\n              semverify(esmSupportVersion),\n              browser,\n            );\n          } else {\n            delete queryBrowsers[browser];\n          }\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  // Parse remaining targets\n  const result: Targets = {};\n  const decimalWarnings = [];\n  for (const target of Object.keys(targets).sort() as Target[]) {\n    const value = targets[target];\n\n    // Warn when specifying minor/patch as a decimal\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({ target, value });\n    }\n\n    const [parsedTarget, parsedValue] =\n      target === \"node\"\n        ? nodeTargetParser(value)\n        : defaultTargetParser(target, value as string);\n\n    if (parsedValue) {\n      // Merge (lowest wins)\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n\n  return result;\n}\n"],"names":["unreleasedLabels","safari","browserNameMap","and_chr","and_ff","android","chrome","edge","firefox","ie","ie_mob","ios_saf","node","deno","op_mob","opera","samsung","versionRegExp","v","OptionValidator","semverMin","first","second","semver","lt","semverify","version","valid","invariant","test","toString","pos","num","indexOf","repeat","isUnreleasedVersion","env","unreleasedLabel","toLowerCase","getLowestUnreleased","a","b","getHighestUnreleased","getLowestImplementedVersion","plugin","environment","result","TargetNames","ios","electron","rhino","opera_mobile","prettifyVersion","major","minor","patch","parse","parts","push","join","prettifyTargets","targets","Object","keys","reduce","results","target","value","getInclusionReasons","item","targetVersions","list","minVersions","minVersion","targetVersion","minIsUnreleased","targetIsUnreleased","targetsSupported","support","targetEnvironments","length","unsupportedEnvironments","filter","lowestImplementedVersion","lowestTargetedVersion","Error","gt","isRequired","name","compatData","pluginsCompatData","includes","excludes","has","filterItems","defaultIncludes","defaultExcludes","pluginSyntaxMap","Set","options","add","shippedProposalsSyntax","get","forEach","delete","ESM_SUPPORT","browserModulesData","validateTargetNames","validTargets","formatMessage","findSuggestion","isBrowsersQueryValid","browsers","Array","isArray","every","validateBrowsers","undefined","String","getLowestVersions","all","browser","browserName","browserVersion","split","splitVersion","isSplitUnreleased","isUnreleased","parsedBrowserVersion","e","outputDecimalWarning","decimalTargets","console","warn","semverifyTarget","error","nodeTargetParser","parsed","process","versions","defaultTargetParser","generateTargets","inputTargets","input","assign","esmodules","resolveTargets","queries","resolved","browserslist","mobileToDesktop","targetsCache","LruCache","max","resolveTargetsCached","cacheKey","cached","set","getTargets","configPath","shouldParseBrowsers","hasTargets","shouldSearchForConfig","ignoreBrowserslistConfig","loadConfig","config","configFile","path","browserslistEnv","map","queryBrowsers","esmSupportVersion","decimalWarnings","sort","parsedTarget","parsedValue"],"mappings":"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"}