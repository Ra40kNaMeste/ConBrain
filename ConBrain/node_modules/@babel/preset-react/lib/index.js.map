{"version":3,"file":"index.js","sources":["../src/normalize-options.ts","../src/index.ts"],"sourcesContent":["import {\n  OptionValidator,\n  findSuggestion,\n} from \"@babel/helper-validator-option\";\nconst v = new OptionValidator(\"@babel/preset-react\");\n\nexport default function normalizeOptions(options: any = {}) {\n  if (process.env.BABEL_8_BREAKING) {\n    if (\"useSpread\" in options) {\n      throw new Error(\n        '@babel/preset-react: Since Babel 8, an inline object with spread elements is always used, and the \"useSpread\" option is no longer available. Please remove it from your config.',\n      );\n    }\n\n    if (\"useBuiltIns\" in options) {\n      const useBuiltInsFormatted = JSON.stringify(options.useBuiltIns);\n      throw new Error(\n        `@babel/preset-react: Since \"useBuiltIns\" is removed in Babel 8, you can remove it from the config.\n- Babel 8 now transforms JSX spread to object spread. If you need to transpile object spread with\n\\`useBuiltIns: ${useBuiltInsFormatted}\\`, you can use the following config\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-object-rest-spread\", { \"loose\": true, \"useBuiltIns\": ${useBuiltInsFormatted} }]\n  ],\n  \"presets\": [\"@babel/preset-react\"]\n}`,\n      );\n    }\n\n    const TopLevelOptions = {\n      development: \"development\",\n      importSource: \"importSource\",\n      pragma: \"pragma\",\n      pragmaFrag: \"pragmaFrag\",\n      pure: \"pure\",\n      runtime: \"runtime\",\n      throwIfNamespace: \"throwIfNamespace\",\n    };\n    v.validateTopLevelOptions(options, TopLevelOptions);\n    const development = v.validateBooleanOption(\n      TopLevelOptions.development,\n      options.development,\n      false,\n    );\n    let importSource = v.validateStringOption(\n      TopLevelOptions.importSource,\n      options.importSource,\n    );\n    let pragma = v.validateStringOption(TopLevelOptions.pragma, options.pragma);\n    let pragmaFrag = v.validateStringOption(\n      TopLevelOptions.pragmaFrag,\n      options.pragmaFrag,\n    );\n    const pure = v.validateBooleanOption(TopLevelOptions.pure, options.pure);\n    const runtime = v.validateStringOption(\n      TopLevelOptions.runtime,\n      options.runtime,\n      \"automatic\",\n    );\n    const throwIfNamespace = v.validateBooleanOption(\n      TopLevelOptions.throwIfNamespace,\n      options.throwIfNamespace,\n      true,\n    );\n\n    const validRuntime = [\"classic\", \"automatic\"];\n\n    if (runtime === \"classic\") {\n      pragma = pragma || \"React.createElement\";\n      pragmaFrag = pragmaFrag || \"React.Fragment\";\n    } else if (runtime === \"automatic\") {\n      importSource = importSource || \"react\";\n    } else {\n      throw new Error(\n        `@babel/preset-react: 'runtime' must be one of ['automatic', 'classic'] but we have '${runtime}'\\n` +\n          `- Did you mean '${findSuggestion(runtime, validRuntime)}'?`,\n      );\n    }\n\n    return {\n      development,\n      importSource,\n      pragma,\n      pragmaFrag,\n      pure,\n      runtime,\n      throwIfNamespace,\n    };\n  } else {\n    let { pragma, pragmaFrag } = options;\n\n    const {\n      pure,\n      throwIfNamespace = true,\n      runtime = \"classic\",\n      importSource,\n      useBuiltIns,\n      useSpread,\n    } = options;\n\n    if (runtime === \"classic\") {\n      pragma = pragma || \"React.createElement\";\n      pragmaFrag = pragmaFrag || \"React.Fragment\";\n    }\n\n    const development = !!options.development;\n\n    return {\n      development,\n      importSource,\n      pragma,\n      pragmaFrag,\n      pure,\n      runtime,\n      throwIfNamespace,\n      useBuiltIns,\n      useSpread,\n    };\n  }\n}\n","import { declarePreset } from \"@babel/helper-plugin-utils\";\nimport transformReactJSX from \"@babel/plugin-transform-react-jsx\";\nimport transformReactJSXDevelopment from \"@babel/plugin-transform-react-jsx-development\";\nimport transformReactDisplayName from \"@babel/plugin-transform-react-display-name\";\nimport transformReactPure from \"@babel/plugin-transform-react-pure-annotations\";\nimport normalizeOptions from \"./normalize-options.ts\";\n\nexport interface Options {\n  development?: boolean;\n  importSource?: string;\n  pragma?: string;\n  pragmaFrag?: string;\n  pure?: string;\n  runtime?: \"automatic\" | \"classic\";\n  throwIfNamespace?: boolean;\n  useBuiltIns?: boolean;\n  useSpread?: boolean;\n}\n\nexport default declarePreset((api, opts: Options) => {\n  api.assertVersion(\n    process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH\n      ? PACKAGE_JSON.version\n      : 7,\n  );\n\n  const {\n    development,\n    importSource,\n    pragma,\n    pragmaFrag,\n    pure,\n    runtime,\n    throwIfNamespace,\n  } = normalizeOptions(opts);\n\n  return {\n    plugins: [\n      [\n        development ? transformReactJSXDevelopment : transformReactJSX,\n        process.env.BABEL_8_BREAKING\n          ? {\n              importSource,\n              pragma,\n              pragmaFrag,\n              runtime,\n              throwIfNamespace,\n              pure,\n            }\n          : {\n              importSource,\n              pragma,\n              pragmaFrag,\n              runtime,\n              throwIfNamespace,\n              pure,\n              useBuiltIns: !!opts.useBuiltIns,\n              useSpread: opts.useSpread,\n            },\n      ],\n      transformReactDisplayName,\n      pure !== false && transformReactPure,\n    ].filter(Boolean),\n  };\n});\n"],"names":["v","OptionValidator","normalizeOptions","options","Error","useBuiltInsFormatted","JSON","stringify","useBuiltIns","TopLevelOptions","development","importSource","pragma","pragmaFrag","pure","runtime","throwIfNamespace","validateTopLevelOptions","validateBooleanOption","validateStringOption","validRuntime","findSuggestion","declarePreset","api","opts","assertVersion","plugins","transformReactJSXDevelopment","transformReactJSX","transformReactDisplayName","transformReactPure","filter","Boolean"],"mappings":"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"}