{"version":3,"file":"index.js","sources":["../src/import-builder.ts","../src/is-module.ts","../src/import-injector.ts","../src/index.ts"],"sourcesContent":["import assert from \"assert\";\nimport {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\n/**\n * A class to track and accumulate mutations to the AST that will eventually\n * output a new require/import statement list.\n */\nexport default class ImportBuilder {\n  private _statements: t.Statement[] = [];\n  private _resultName: t.Identifier | t.MemberExpression = null;\n\n  declare _scope: Scope;\n  declare _hub: File[\"hub\"];\n  private _importedSource: string;\n\n  constructor(importedSource: string, scope: Scope, hub: File[\"hub\"]) {\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName,\n    };\n  }\n\n  import() {\n    this._statements.push(\n      importDeclaration([], stringLiteral(this._importedSource)),\n    );\n    return this;\n  }\n\n  require() {\n    this._statements.push(\n      expressionStatement(\n        callExpression(identifier(\"require\"), [\n          stringLiteral(this._importedSource),\n        ]),\n      ),\n    );\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n  default(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  named(name: string, importName: string) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n    if (statement.type !== \"ExpressionStatement\") {\n      assert(this._resultName);\n      statement = expressionStatement(this._resultName);\n      this._statements.push(statement);\n    }\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [\n      variableDeclarator(id, statement.expression),\n    ]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee: t.Expression) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = callExpression(callee, [\n        statement.declarations[0].init,\n      ]);\n    } else {\n      assert.fail(\"Unexpected type.\");\n    }\n    return this;\n  }\n\n  prop(name: string) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(\n        statement.expression,\n        identifier(name),\n      );\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = memberExpression(\n        statement.declarations[0].init,\n        identifier(name),\n      );\n    } else {\n      assert.fail(\"Unexpected type:\" + statement.type);\n    }\n    return this;\n  }\n\n  read(name: string) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\n/**\n * A small utility to check if a file qualifies as a module.\n */\nexport default function isModule(path: NodePath<t.Program>) {\n  return path.node.sourceType === \"module\";\n}\n","import assert from \"assert\";\nimport { numericLiteral, sequenceExpression } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { NodePath, Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\nimport ImportBuilder from \"./import-builder.ts\";\nimport isModule from \"./is-module.ts\";\n\nexport type ImportOptions = {\n  /**\n   * The module being referenced.\n   */\n  importedSource: string | null;\n  /**\n   * The type of module being imported:\n   *\n   *  * 'es6'      - An ES6 module.\n   *  * 'commonjs' - A CommonJS module. (Default)\n   */\n  importedType: \"es6\" | \"commonjs\";\n  /**\n   * The type of interop behavior for namespace/default/named when loading\n   * CommonJS modules.\n   *\n   * ## 'babel' (Default)\n   *\n   * Load using Babel's interop.\n   *\n   * If '.__esModule' is true, treat as 'compiled', else:\n   *\n   * * Namespace: A copy of the module.exports with .default\n   *     populated by the module.exports object.\n   * * Default: The module.exports value.\n   * * Named: The .named property of module.exports.\n   *\n   * The 'ensureLiveReference' has no effect on the liveness of these.\n   *\n   * ## 'compiled'\n   *\n   * Assume the module is ES6 compiled to CommonJS. Useful to avoid injecting\n   * interop logic if you are confident that the module is a certain format.\n   *\n   * * Namespace: The root module.exports object.\n   * * Default: The .default property of the namespace.\n   * * Named: The .named property of the namespace.\n   *\n   * Will return erroneous results if the imported module is _not_ compiled\n   * from ES6 with Babel.\n   *\n   * ## 'uncompiled'\n   *\n   * Assume the module is _not_ ES6 compiled to CommonJS. Used a simplified\n   * access pattern that doesn't require additional function calls.\n   *\n   * Will return erroneous results if the imported module _is_ compiled\n   * from ES6 with Babel.\n   *\n   * * Namespace: The module.exports object.\n   * * Default: The module.exports object.\n   * * Named: The .named property of module.exports.\n   */\n  importedInterop: \"babel\" | \"node\" | \"compiled\" | \"uncompiled\";\n  /**\n   * The type of CommonJS interop included in the environment that will be\n   * loading the output code.\n   *\n   *  * 'babel' - CommonJS modules load with Babel's interop. (Default)\n   *  * 'node'  - CommonJS modules load with Node's interop.\n   *\n   * See descriptions in 'importedInterop' for more details.\n   */\n  importingInterop: \"babel\" | \"node\";\n  /**\n   * Define whether we explicitly care that the import be a live reference.\n   * Only applies when importing default and named imports, not the namespace.\n   *\n   *  * true  - Force imported values to be live references.\n   *  * false - No particular requirements. Keeps the code simplest. (Default)\n   */\n  ensureLiveReference: boolean;\n  /**\n   * Define if we explicitly care that the result not be a property reference.\n   *\n   *  * true  - Force calls to exclude context. Useful if the value is going to\n   *            be used as function callee.\n   *  * false - No particular requirements for context of the access. (Default)\n   */\n  ensureNoContext: boolean;\n  /**\n   * Define whether the import should be loaded before or after the existing imports.\n   * \"after\" is only allowed inside ECMAScript modules, since it's not possible to\n   * reliably pick the location _after_ require() calls but _before_ other code in CJS.\n   */\n  importPosition: \"before\" | \"after\";\n\n  nameHint?: string;\n  blockHoist?: number;\n};\n\n/**\n * A general helper classes add imports via transforms. See README for usage.\n */\nexport default class ImportInjector {\n  /**\n   * The path used for manipulation.\n   */\n  declare _programPath: NodePath<t.Program>;\n\n  /**\n   * The scope used to generate unique variable names.\n   */\n  declare _programScope: Scope;\n\n  /**\n   * The file used to inject helpers and resolve paths.\n   */\n  declare _hub: File[\"hub\"];\n\n  /**\n   * The default options to use with this instance when imports are added.\n   */\n  _defaultOpts: ImportOptions = {\n    importedSource: null,\n    importedType: \"commonjs\",\n    importedInterop: \"babel\",\n    importingInterop: \"babel\",\n    ensureLiveReference: false,\n    ensureNoContext: false,\n    importPosition: \"before\",\n  };\n\n  constructor(\n    path: NodePath,\n    importedSource?: string,\n    opts?: Partial<ImportOptions>,\n  ) {\n    const programPath = path.find(p => p.isProgram()) as NodePath<t.Program>;\n\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub as File[\"hub\"];\n\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(\n    importName: string,\n    importedSourceIn: string,\n    opts: Partial<ImportOptions>,\n  ) {\n    assert(typeof importName === \"string\");\n\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      importName,\n    );\n  }\n\n  addNamespace(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      null,\n    );\n  }\n\n  addSideEffect(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      void 0,\n    );\n  }\n\n  _applyDefaults(\n    importedSource: string | Partial<ImportOptions>,\n    opts: Partial<ImportOptions> | undefined,\n    isInit = false,\n  ) {\n    let newOpts: ImportOptions;\n    if (typeof importedSource === \"string\") {\n      newOpts = { ...this._defaultOpts, importedSource, ...opts };\n    } else {\n      assert(!opts, \"Unexpected secondary arguments.\");\n      newOpts = { ...this._defaultOpts, ...importedSource };\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n    return newOpts;\n  }\n\n  _generateImport(\n    opts: Partial<ImportOptions>,\n    importName: string | null | undefined,\n  ) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n\n      // Not meant for public usage. Allows code that absolutely must control\n      // ordering to set a specific hoist value on the import nodes.\n      // This is ignored when \"importPosition\" is \"after\".\n      blockHoist,\n    } = opts;\n\n    // Provide a hint for generateUidIdentifier for the local variable name\n    // to use for the import, if the code will generate a simple assignment\n    // to a variable.\n    let name = nameHint || importName;\n\n    const isMod = isModule(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new ImportBuilder(\n      importedSource,\n      this._programScope,\n      this._hub,\n    );\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      // import * as namespace from ''; namespace\n      // import def from ''; def\n      // import { named } from ''; named\n      builder.import();\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        // import _tmp from ''; var namespace = interopRequireWildcard(_tmp); namespace\n        // import _tmp from ''; var def = interopRequireDefault(_tmp).default; def\n        // import _tmp from ''; _tmp.named\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n\n        builder.import();\n        if (isNamespace) {\n          builder\n            .default(es6Default)\n            .var(name || importedSource)\n            .wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder\n              .default(es6Default)\n              .var(name || importedSource)\n              .defaultInterop()\n              .read(\"default\");\n          } else {\n            builder\n              .default(es6Default)\n              .var(name)\n              .defaultInterop()\n              .prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = interopRequireWildcard(require(''));\n        // var def = interopRequireDefault(require('')).default; def\n        // var named = require('').named; named\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import namespace from ''; namespace.default\n        // import namespace from ''; namespace.named\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        // Note: These lookups will break if the module has no __esModule set,\n        // hence the warning that 'compiled' will not work on standard CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var namespace = require(''); namespace.default\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import def from ''; def;\n        // import namespace from ''; namespace.named\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import namespace from '';\n        // import def from '';\n        // import { named } from ''; named;\n        // Note: These lookups will break if the module has __esModule set,\n        // hence the warning that 'uncompiled' will not work on ES6 transpiled\n        // to CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var def = require(''); def\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const { statements, resultName } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if (\n      (isDefault || isNamed) &&\n      ensureNoContext &&\n      resultName.type !== \"Identifier\"\n    ) {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n    return resultName;\n  }\n\n  _insertStatements(\n    statements: t.Statement[],\n    importPosition = \"before\",\n    blockHoist = 3,\n  ) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        // @ts-expect-error handle _blockHoist\n        node._blockHoist = blockHoist;\n      });\n\n      const targetPath = body.find(p => {\n        // @ts-expect-error todo(flow->ts): avoid mutations\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n}\n","import ImportInjector, { type ImportOptions } from \"./import-injector.ts\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\nexport { ImportInjector };\n\nexport { default as isModule } from \"./is-module.ts\";\n\nexport function addDefault(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addDefault(importedSource, opts);\n}\n\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<\n    Partial<ImportOptions>,\n    \"ensureLiveReference\" | \"ensureNoContext\"\n  >,\n): t.Identifier;\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<Partial<ImportOptions>, \"ensureLiveReference\"> & {\n    ensureLiveReference: true;\n  },\n): t.MemberExpression;\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<Partial<ImportOptions>, \"ensureNoContext\"> & {\n    ensureNoContext: true;\n  },\n): t.SequenceExpression;\n/**\n * add a named import to the program path of given path\n *\n * @export\n * @param {NodePath} path The starting path to find a program path\n * @param {string} name The name of the generated binding. Babel will prefix it with `_`\n * @param {string} importedSource The source of the import\n * @param {Partial<ImportOptions>} [opts]\n * @returns {t.Identifier | t.MemberExpression | t.SequenceExpression} If opts.ensureNoContext is true, returns a SequenceExpression,\n *   else if opts.ensureLiveReference is true, returns a MemberExpression, else returns an Identifier\n */\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addNamed(name, importedSource, opts);\n}\nexport { addNamed };\n\nexport function addNamespace(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addNamespace(importedSource, opts);\n}\n\nexport function addSideEffect(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addSideEffect(importedSource, opts);\n}\n"],"names":["callExpression","cloneNode","expressionStatement","identifier","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","memberExpression","stringLiteral","variableDeclaration","variableDeclarator","_t","ImportBuilder","_statements","_resultName","_importedSource","constructor","importedSource","scope","hub","_scope","_hub","done","statements","resultName","import","push","require","namespace","name","local","generateUidIdentifier","statement","length","assert","type","specifiers","default","id","named","importName","var","expression","defaultInterop","_interop","addHelper","wildcardInterop","callee","declarations","init","fail","prop","read","isModule","path","node","sourceType","numericLiteral","sequenceExpression","ImportInjector","_defaultOpts","importedType","importedInterop","importingInterop","ensureLiveReference","ensureNoContext","importPosition","opts","programPath","find","p","isProgram","_programPath","_programScope","_applyDefaults","addDefault","importedSourceIn","addNamed","_generateImport","addNamespace","addSideEffect","isInit","newOpts","Object","assign","nameHint","undefined","blockHoist","isDefault","isNamed","isNamespace","isMod","isModuleForNode","isModuleForBabel","Error","builder","es6Default","_insertStatements","body","get","i","isImportDeclaration","insertAfter","forEach","_blockHoist","targetPath","val","Number","isFinite","insertBefore","unshiftContainer"],"mappings":"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"}