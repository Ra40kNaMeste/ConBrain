{"version":3,"names":["isAsync","waitFor","once","fn","result","resultP","promiseReferenced","ok","value","error","resolve","reject","Promise","res","rej"],"sources":["../../src/gensync-utils/functional.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\n\nimport { isAsync, waitFor } from \"./async.ts\";\n\nexport function once<R>(fn: () => Handler<R>): () => Handler<R> {\n  let result: { ok: true; value: R } | { ok: false; value: unknown };\n  let resultP: Promise<R>;\n  let promiseReferenced = false;\n  return function* () {\n    if (!result) {\n      if (resultP) {\n        promiseReferenced = true;\n        return yield* waitFor(resultP);\n      }\n\n      if (!(yield* isAsync())) {\n        try {\n          result = { ok: true, value: yield* fn() };\n        } catch (error) {\n          result = { ok: false, value: error };\n        }\n      } else {\n        let resolve: (result: R) => void, reject: (error: unknown) => void;\n        resultP = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n\n        try {\n          result = { ok: true, value: yield* fn() };\n          // Avoid keeping the promise around\n          // now that we have the result.\n          resultP = null;\n          // We only resolve/reject the promise if it has been actually\n          // referenced. If there are no listeners we can forget about it.\n          // In the reject case, this avoid uncatchable unhandledRejection\n          // events.\n          if (promiseReferenced) resolve(result.value);\n        } catch (error) {\n          result = { ok: false, value: error };\n          resultP = null;\n          if (promiseReferenced) reject(error);\n        }\n      }\n    }\n\n    if (result.ok) return result.value;\n    else throw result.value;\n  };\n}\n"],"mappings":"AAEA,SAASA,OAAO,EAAEC,OAAO,QAAQ,YAAY;AAE7C,OAAO,SAASC,IAAIA,CAAIC,EAAoB,EAAoB;EAC9D,IAAIC,MAA8D;EAClE,IAAIC,OAAmB;EACvB,IAAIC,iBAAiB,GAAG,KAAK;EAC7B,OAAO,aAAa;IAClB,IAAI,CAACF,MAAM,EAAE;MACX,IAAIC,OAAO,EAAE;QACXC,iBAAiB,GAAG,IAAI;QACxB,OAAO,OAAOL,OAAO,CAACI,OAAO,CAAC;MAChC;MAEA,IAAI,EAAE,OAAOL,OAAO,CAAC,CAAC,CAAC,EAAE;QACvB,IAAI;UACFI,MAAM,GAAG;YAAEG,EAAE,EAAE,IAAI;YAAEC,KAAK,EAAE,OAAOL,EAAE,CAAC;UAAE,CAAC;QAC3C,CAAC,CAAC,OAAOM,KAAK,EAAE;UACdL,MAAM,GAAG;YAAEG,EAAE,EAAE,KAAK;YAAEC,KAAK,EAAEC;UAAM,CAAC;QACtC;MACF,CAAC,MAAM;QACL,IAAIC,OAA4B,EAAEC,MAAgC;QAClEN,OAAO,GAAG,IAAIO,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UAClCJ,OAAO,GAAGG,GAAG;UACbF,MAAM,GAAGG,GAAG;QACd,CAAC,CAAC;QAEF,IAAI;UACFV,MAAM,GAAG;YAAEG,EAAE,EAAE,IAAI;YAAEC,KAAK,EAAE,OAAOL,EAAE,CAAC;UAAE,CAAC;UAGzCE,OAAO,GAAG,IAAI;UAKd,IAAIC,iBAAiB,EAAEI,OAAO,CAACN,MAAM,CAACI,KAAK,CAAC;QAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdL,MAAM,GAAG;YAAEG,EAAE,EAAE,KAAK;YAAEC,KAAK,EAAEC;UAAM,CAAC;UACpCJ,OAAO,GAAG,IAAI;UACd,IAAIC,iBAAiB,EAAEK,MAAM,CAACF,KAAK,CAAC;QACtC;MACF;IACF;IAEA,IAAIL,MAAM,CAACG,EAAE,EAAE,OAAOH,MAAM,CAACI,KAAK,CAAC,KAC9B,MAAMJ,MAAM,CAACI,KAAK;EACzB,CAAC;AACH"}