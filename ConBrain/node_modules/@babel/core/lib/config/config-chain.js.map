{"version":3,"names":["path","buildDebug","validate","pathPatternToRegex","ConfigPrinter","ChainFormatter","endHiddenCallStack","ConfigError","debug","findPackageData","findRelativeConfig","findRootConfig","loadConfig","makeWeakCacheSync","makeStrongCacheSync","createCachedDescriptors","createUncachedDescriptors","buildPresetChain","arg","context","chain","buildPresetChainWalker","plugins","dedupDescriptors","presets","options","map","o","normalizeOptions","files","Set","makeChainWalker","root","preset","loadPresetDescriptors","env","envName","loadPresetEnvDescriptors","overrides","index","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","createLogger","buildRootDescriptors","alias","buildEnvDescriptors","buildOverrideDescriptors","buildOverrideEnvDescriptors","buildRootChain","opts","configReport","babelRcReport","programmaticLogger","programmaticChain","loadProgrammaticChain","dirname","cwd","undefined","programmaticReport","output","configFile","caller","babelrc","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","configFileLogger","validatedFile","validateConfigFile","result","loadFileChain","mergeChain","ignoreFile","babelrcFile","isIgnored","fileChain","filename","pkgData","babelrcLoadEnabled","ignore","config","add","filepath","shouldIgnore","validateBabelrcFile","babelrcLogger","showConfig","console","log","filter","x","join","fileHandling","absoluteRoot","directories","indexOf","babelrcPatterns","Array","isArray","pat","resolve","length","some","directory","matchPattern","file","validateExtendFile","input","baseLogger","buildProgrammaticLogger","loadFileChainWalker","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","buildFileLogger","configure","Config","descriptors","_","Programmatic","callerName","name","Error","override","chainWalker","flattenedConfigs","rootOpts","configIsApplicable","push","envOpts","forEach","overrideOps","overrideEnvOpts","only","logger","mergeExtendsChain","mergeChainOpts","extends","has","from","delete","target","source","Object","assign","passPerPreset","test","include","exclude","hasOwn","sourceMaps","sourceMap","items","Map","item","value","fnKey","nameMap","get","set","desc","ownPass","reduce","acc","configName","configFieldIsApplicable","patterns","matchesPatterns","ignoreListReplacer","_key","RegExp","String","message","JSON","stringify","pattern","pathToTest"],"sources":["../../src/config/config-chain.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport path from \"path\";\nimport buildDebug from \"debug\";\nimport type { Handler } from \"gensync\";\nimport { validate } from \"./validation/options.ts\";\nimport type {\n  ValidatedOptions,\n  IgnoreList,\n  ConfigApplicableTest,\n  BabelrcSearch,\n  CallerMetadata,\n  IgnoreItem,\n} from \"./validation/options.ts\";\nimport pathPatternToRegex from \"./pattern-to-regex.ts\";\nimport { ConfigPrinter, ChainFormatter } from \"./printer.ts\";\nimport type { ReadonlyDeepArray } from \"./helpers/deep-array.ts\";\n\nimport { endHiddenCallStack } from \"../errors/rewrite-stack-trace.ts\";\nimport ConfigError from \"../errors/config-error.ts\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api.ts\";\n\nconst debug = buildDebug(\"babel:config:config-chain\");\n\nimport {\n  findPackageData,\n  findRelativeConfig,\n  findRootConfig,\n  loadConfig,\n} from \"./files/index.ts\";\nimport type { ConfigFile, IgnoreFile, FilePackageData } from \"./files/index.ts\";\n\nimport { makeWeakCacheSync, makeStrongCacheSync } from \"./caching.ts\";\n\nimport {\n  createCachedDescriptors,\n  createUncachedDescriptors,\n} from \"./config-descriptors.ts\";\nimport type {\n  UnloadedDescriptor,\n  OptionsAndDescriptors,\n  ValidatedFile,\n} from \"./config-descriptors.ts\";\n\nexport type ConfigChain = {\n  plugins: Array<UnloadedDescriptor<PluginAPI>>;\n  presets: Array<UnloadedDescriptor<PresetAPI>>;\n  options: Array<ValidatedOptions>;\n  files: Set<string>;\n};\n\nexport type PresetInstance = {\n  options: ValidatedOptions;\n  alias: string;\n  dirname: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type ConfigContext = {\n  filename: string | undefined;\n  cwd: string;\n  root: string;\n  envName: string;\n  caller: CallerMetadata | undefined;\n  showConfig: boolean;\n};\n\n/**\n * Build a config chain for a given preset.\n */\nexport function* buildPresetChain(\n  arg: PresetInstance,\n  context: any,\n): Handler<ConfigChain | null> {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set(),\n  };\n}\n\nexport const buildPresetChainWalker = makeChainWalker<PresetInstance>({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) =>\n    loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}, // Currently we don't support logging how preset is expanded\n});\nconst loadPresetDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  buildRootDescriptors(preset, preset.alias, createUncachedDescriptors),\n);\nconst loadPresetEnvDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      preset,\n      preset.alias,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadPresetOverridesDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      buildOverrideDescriptors(\n        preset,\n        preset.alias,\n        createUncachedDescriptors,\n        index,\n      ),\n    ),\n);\nconst loadPresetOverridesEnvDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          preset,\n          preset.alias,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nexport type FileHandling = \"transpile\" | \"ignored\" | \"unsupported\";\nexport type RootConfigChain = ConfigChain & {\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  ignore: IgnoreFile | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n};\n\n/**\n * Build a config chain for Babel's full root configuration.\n */\nexport function* buildRootChain(\n  opts: ValidatedOptions,\n  context: ConfigContext,\n): Handler<RootConfigChain | null> {\n  let configReport, babelRcReport;\n  const programmaticLogger = new ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain(\n    {\n      options: opts,\n      dirname: context.cwd,\n    },\n    context,\n    undefined,\n    programmaticLogger,\n  );\n  if (!programmaticChain) return null;\n  const programmaticReport = yield* programmaticLogger.output();\n\n  let configFile;\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* loadConfig(\n      opts.configFile,\n      context.cwd,\n      context.envName,\n      context.caller,\n    );\n  } else if (opts.configFile !== false) {\n    configFile = yield* findRootConfig(\n      context.root,\n      context.envName,\n      context.caller,\n    );\n  }\n\n  let { babelrc, babelrcRoots } = opts;\n  let babelrcRootsDirectory = context.cwd;\n\n  const configFileChain = emptyChain();\n  const configFileLogger = new ConfigPrinter();\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(\n      validatedFile,\n      context,\n      undefined,\n      configFileLogger,\n    );\n    if (!result) return null;\n    configReport = yield* configFileLogger.output();\n\n    // Allow config files to toggle `.babelrc` resolution on and off and\n    // specify where the roots are.\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n  // resolve all .babelrc files\n  if (\n    (babelrc === true || babelrc === undefined) &&\n    typeof context.filename === \"string\"\n  ) {\n    const pkgData = yield* findPackageData(context.filename);\n\n    if (\n      pkgData &&\n      babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)\n    ) {\n      ({ ignore: ignoreFile, config: babelrcFile } = yield* findRelativeConfig(\n        pkgData,\n        context.envName,\n        context.caller,\n      ));\n\n      if (ignoreFile) {\n        fileChain.files.add(ignoreFile.filepath);\n      }\n\n      if (\n        ignoreFile &&\n        shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)\n      ) {\n        isIgnored = true;\n      }\n\n      if (babelrcFile && !isIgnored) {\n        const validatedFile = validateBabelrcFile(babelrcFile);\n        const babelrcLogger = new ConfigPrinter();\n        const result = yield* loadFileChain(\n          validatedFile,\n          context,\n          undefined,\n          babelrcLogger,\n        );\n        if (!result) {\n          isIgnored = true;\n        } else {\n          babelRcReport = yield* babelrcLogger.output();\n          mergeChain(fileChain, result);\n        }\n      }\n\n      if (babelrcFile && isIgnored) {\n        fileChain.files.add(babelrcFile.filepath);\n      }\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(\n      `Babel configs on \"${context.filename}\" (ascending priority):\\n` +\n        // print config by the order of ascending priority\n        [configReport, babelRcReport, programmaticReport]\n          .filter(x => !!x)\n          .join(\"\\n\\n\") +\n        \"\\n-----End Babel configs-----\",\n    );\n  }\n  // Insert file chain in front so programmatic options have priority\n  // over configuration file chain items.\n  const chain = mergeChain(\n    mergeChain(mergeChain(emptyChain(), configFileChain), fileChain),\n    programmaticChain,\n  );\n\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files,\n  };\n}\n\nfunction babelrcLoadEnabled(\n  context: ConfigContext,\n  pkgData: FilePackageData,\n  babelrcRoots: BabelrcSearch | undefined,\n  babelrcRootsDirectory: string,\n): boolean {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n\n  const absoluteRoot = context.root;\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns as IgnoreItem];\n  }\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\"\n      ? path.resolve(babelrcRootsDirectory, pat)\n      : pat;\n  });\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = pathPatternToRegex(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"configfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateBabelrcFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"babelrcfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateExtendFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"extendsfile\", file.options, file.filepath),\n  }),\n);\n\n/**\n * Build a config chain for just the programmatic options passed into Babel.\n */\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", createCachedDescriptors),\n  env: (input, envName) =>\n    buildEnvDescriptors(input, \"base\", createCachedDescriptors, envName),\n  overrides: (input, index) =>\n    buildOverrideDescriptors(input, \"base\", createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) =>\n    buildOverrideEnvDescriptors(\n      input,\n      \"base\",\n      createCachedDescriptors,\n      index,\n      envName,\n    ),\n  createLogger: (input, context, baseLogger) =>\n    buildProgrammaticLogger(input, context, baseLogger),\n});\n\n/**\n * Build a config chain for a given file.\n */\nconst loadFileChainWalker = makeChainWalker<ValidatedFile>({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) =>\n    loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) =>\n    buildFileLogger(file.filepath, context, baseLogger),\n});\n\nfunction* loadFileChain(\n  input: ValidatedFile,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger: ConfigPrinter,\n) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n  chain?.files.add(input.filepath);\n\n  return chain;\n}\n\nconst loadFileDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  buildRootDescriptors(file, file.filepath, createUncachedDescriptors),\n);\nconst loadFileEnvDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadFileOverridesDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((index: number) =>\n    buildOverrideDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      index,\n    ),\n  ),\n);\nconst loadFileOverridesEnvDescriptors = makeWeakCacheSync(\n  (file: ValidatedFile) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          file,\n          file.filepath,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nfunction buildFileLogger(\n  filepath: string,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Config, {\n    filepath,\n  });\n}\n\nfunction buildRootDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(\n  _: unknown,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Programmatic, {\n    callerName: context.caller?.name,\n  });\n}\n\nfunction buildEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  envName: string,\n) {\n  const opts = options.env?.[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n) {\n  const opts = options.overrides?.[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n  envName: string,\n) {\n  const override = options.overrides?.[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n\n  const opts = override.env?.[envName];\n  return opts\n    ? descriptors(\n        dirname,\n        opts,\n        `${alias}.overrides[${index}].env[\"${envName}\"]`,\n      )\n    : null;\n}\n\nfunction makeChainWalker<\n  ArgT extends {\n    options: ValidatedOptions;\n    dirname: string;\n    filepath?: string;\n  },\n>({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger,\n}: {\n  root: (configEntry: ArgT) => OptionsAndDescriptors;\n  env: (configEntry: ArgT, env: string) => OptionsAndDescriptors | null;\n  overrides: (configEntry: ArgT, index: number) => OptionsAndDescriptors;\n  overridesEnv: (\n    configEntry: ArgT,\n    index: number,\n    env: string,\n  ) => OptionsAndDescriptors | null;\n  createLogger: (\n    configEntry: ArgT,\n    context: ConfigContext,\n    printer: ConfigPrinter | void,\n  ) => (\n    opts: OptionsAndDescriptors,\n    index?: number | null,\n    env?: string | null,\n  ) => void;\n}): (\n  configEntry: ArgT,\n  context: ConfigContext,\n  files?: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n) => Handler<ConfigChain | null> {\n  return function* chainWalker(input, context, files = new Set(), baseLogger) {\n    const { dirname } = input;\n\n    const flattenedConfigs: Array<{\n      config: OptionsAndDescriptors;\n      index: number | undefined | null;\n      envName: string | undefined | null;\n    }> = [];\n\n    const rootOpts = root(input);\n    if (configIsApplicable(rootOpts, dirname, context, input.filepath)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined,\n      });\n\n      const envOpts = env(input, context.envName);\n      if (\n        envOpts &&\n        configIsApplicable(envOpts, dirname, context, input.filepath)\n      ) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined,\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n        if (configIsApplicable(overrideOps, dirname, context, input.filepath)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined,\n          });\n\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n          if (\n            overrideEnvOpts &&\n            configIsApplicable(\n              overrideEnvOpts,\n              dirname,\n              context,\n              input.filepath,\n            )\n          ) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName,\n            });\n          }\n        }\n      });\n    }\n\n    // Process 'ignore' and 'only' before 'extends' items are processed so\n    // that we don't do extra work loading extended configs if a file is\n    // ignored.\n    if (\n      flattenedConfigs.some(\n        ({\n          config: {\n            options: { ignore, only },\n          },\n        }) => shouldIgnore(context, ignore, only, dirname),\n      )\n    ) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const { config, index, envName } of flattenedConfigs) {\n      if (\n        !(yield* mergeExtendsChain(\n          chain,\n          config.options,\n          dirname,\n          context,\n          files,\n          baseLogger,\n        ))\n      ) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      yield* mergeChainOpts(chain, config);\n    }\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(\n  chain: ConfigChain,\n  opts: ValidatedOptions,\n  dirname: string,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n): Handler<boolean> {\n  if (opts.extends === undefined) return true;\n\n  const file = yield* loadConfig(\n    opts.extends,\n    dirname,\n    context.envName,\n    context.caller,\n  );\n\n  if (files.has(file)) {\n    throw new Error(\n      `Configuration cycle detected loading ${file.filepath}.\\n` +\n        `File already loaded following the config chain:\\n` +\n        Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"),\n    );\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(\n    validateExtendFile(file),\n    context,\n    files,\n    baseLogger,\n  );\n  files.delete(file);\n\n  if (!fileChain) return false;\n\n  mergeChain(chain, fileChain);\n\n  return true;\n}\n\nfunction mergeChain(target: ConfigChain, source: ConfigChain): ConfigChain {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction* mergeChainOpts(\n  target: ConfigChain,\n  { options, plugins, presets }: OptionsAndDescriptors,\n): Handler<ConfigChain> {\n  target.options.push(options);\n  target.plugins.push(...(yield* plugins()));\n  target.presets.push(...(yield* presets()));\n\n  return target;\n}\n\nfunction emptyChain(): ConfigChain {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set(),\n  };\n}\n\nfunction normalizeOptions(opts: ValidatedOptions): ValidatedOptions {\n  const options = {\n    ...opts,\n  };\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  // \"sourceMap\" is just aliased to sourceMap, so copy it over as\n  // we merge the options together.\n  if (Object.hasOwn(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n  return options;\n}\n\nfunction dedupDescriptors<API>(\n  items: Array<UnloadedDescriptor<API>>,\n): Array<UnloadedDescriptor<API>> {\n  const map: Map<\n    Function,\n    Map<string | void, { value: UnloadedDescriptor<API> }>\n  > = new Map();\n\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n      let desc = nameMap.get(item.name);\n      if (!desc) {\n        desc = { value: item };\n        descriptors.push(desc);\n\n        // Treat passPerPreset presets as unique, skipping them\n        // in the merge processing steps.\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({ value: item });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable(\n  { options }: OptionsAndDescriptors,\n  dirname: string,\n  context: ConfigContext,\n  configName: string,\n): boolean {\n  return (\n    (options.test === undefined ||\n      configFieldIsApplicable(context, options.test, dirname, configName)) &&\n    (options.include === undefined ||\n      configFieldIsApplicable(context, options.include, dirname, configName)) &&\n    (options.exclude === undefined ||\n      !configFieldIsApplicable(context, options.exclude, dirname, configName))\n  );\n}\n\nfunction configFieldIsApplicable(\n  context: ConfigContext,\n  test: ConfigApplicableTest,\n  dirname: string,\n  configName: string,\n): boolean {\n  const patterns = Array.isArray(test) ? test : [test];\n\n  return matchesPatterns(context, patterns, dirname, configName);\n}\n\n/**\n * Print the ignoreList-values in a more helpful way than the default.\n */\nfunction ignoreListReplacer(\n  _key: string,\n  value: IgnoreList | IgnoreItem,\n): IgnoreList | IgnoreItem | string {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n\n  return value;\n}\n\n/**\n * Tests if a filename should be ignored based on \"ignore\" and \"only\" options.\n */\nfunction shouldIgnore(\n  context: ConfigContext,\n  ignore: IgnoreList | undefined | null,\n  only: IgnoreList | undefined | null,\n  dirname: string,\n): boolean {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it matches one of \\`ignore: ${JSON.stringify(\n      ignore,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it fails to match one of \\`only: ${JSON.stringify(\n      only,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns result of calling function with filename if pattern is a function.\n * Otherwise returns result of matching pattern Regex with filename.\n */\nfunction matchesPatterns(\n  context: ConfigContext,\n  patterns: IgnoreList,\n  dirname: string,\n  configName?: string,\n): boolean {\n  return patterns.some(pattern =>\n    matchPattern(pattern, dirname, context.filename, context, configName),\n  );\n}\n\nfunction matchPattern(\n  pattern: IgnoreItem,\n  dirname: string,\n  pathToTest: string | undefined,\n  context: ConfigContext,\n  configName?: string,\n): boolean {\n  if (typeof pattern === \"function\") {\n    return !!endHiddenCallStack(pattern)(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller,\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new ConfigError(\n      `Configuration contains string/RegExp pattern, but no filename was passed to Babel`,\n      configName,\n    );\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = pathPatternToRegex(pattern, dirname);\n  }\n  return pattern.test(pathToTest);\n}\n"],"mappings":"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"}